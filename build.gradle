import com.marcnuri.yack.schema.api.ApiGeneratorTask
import com.marcnuri.yack.schema.model.ModelGeneratorTask

plugins {
  id 'java-library'
  id 'maven'
}

apply from: 'properties.gradle'

def schemaDir = new File(projectDir, "schema")
def currentSchema = new File(schemaDir, "kubernetes-1.18.2.json")
task generateModel(type: ModelGeneratorTask) {
  group = 'generators'
  packageName = 'com.marcnuri.yakc'
  schema = currentSchema
  templatesDir = new File(schemaDir, "templates")
  outputDirectory = new File(projectDir, "kubernetes-model")
}
task generateApi(type: ApiGeneratorTask) {
  group = 'generators'
  packageName = 'com.marcnuri.yakc'
  schema = currentSchema
  templatesDir = new File(schemaDir, "templates")
  outputDirectory = new File(projectDir, "kubernetes-api")
}

subprojects {
  afterEvaluate {  task sourcesJar(type: Jar, dependsOn: classes) {
    group = 'build'
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
  }
    task javadocJar(type: Jar, dependsOn: javadoc) {
      group = 'documentation'
      archiveClassifier.set('javadoc')
      from javadoc.destinationDir
    }
    task assemblePublication(dependsOn: [assemble, sourcesJar, javadocJar]) {
      group = 'build'
      doLast {
        artifacts {
          archives sourcesJar
          archives javadocJar
        }
      }
    }
    install.dependsOn assemblePublication
  }
}
